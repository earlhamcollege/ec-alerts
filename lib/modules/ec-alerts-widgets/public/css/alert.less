@alert-padding-y: 		0.75rem;
@alert-padding-x: 		1.25rem;
@alert-margin-bottom:	1rem;
@alert-border-radius:               0.25rem;
@alert-link-font-weight:            700;
@alert-border-width:                1px;

@alert-bg-level:                    -10;
@alert-border-level:                -9;
@alert-color-level:     6;
@font-size-base:        1rem; // Assumes the browser default, typically `16px`
@close-font-size:		(@font-size-base * 1.5);

@primary:       @blue;
@secondary:     @gray-600;
@success:       @green;
@info:          @cyan;
@warning:       @yellow;
@danger:        @red;
@light:         @gray-100;
@dark:          @gray-800;

@theme-colors:
	primary      @primary,
	secondary    @secondary,
	success      @success,
	info         @info,
	warning      @warning,
	danger       @danger,
	light        @light,
	dark         @dark;

//
// Base styles
//

.alert {
	position: relative;
	padding: @alert-padding-y @alert-padding-x;
	margin-bottom: @alert-margin-bottom;
	border: @alert-border-width solid transparent;
	#border-radius(@alert-border-radius);
}

// Headings for larger alerts
.alert-heading {
	// Specified to prevent conflicts of changing @headings-color
	color: inherit;
}

// Provide class for links that match alerts
.alert-link {
	font-weight: @alert-link-font-weight;
}


// Dismissible alerts
//
// Expand the right padding and account for the close button's positioning.

.alert-dismissible {
	padding-right: (@close-font-size + @alert-padding-x * 2);

	// Adjust close link position
	.close {
		position: absolute;
		top: 0;
		right: 0;
		padding: @alert-padding-y @alert-padding-x;
		color: inherit;
	}
}


// Alternate styles
//
// Generate contextual modifier classes for colorizing the alert.

//@each $color, $value in $theme-colors {
//  .alert-#{$color} {
//    @include alert-variant(theme-color-level($color, $alert-bg-level), theme-color-level($color, $alert-border-level), theme-color-level($color, $alert-color-level));
//  }
//}
#each-theme-color-alert(@i) when (@i =< length(@theme-colors)) {
	@item: extract(@theme-colors, @i);
	@color: extract(@item, 1);

	.alert-@{color} {
		#alert-variant(theme-color-level(@color, @alert-bg-level), theme-color-level(@color, @alert-border-level), theme-color-level(@color, @alert-color-level));
	}

	#each-theme-color-alert((@i + 1));
} #each-theme-color-alert(1);
